<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>Title</title>
    <style>
        body{font-family: "微软雅黑"}
        li {list-style: none}
        input { line-height: 26px; margin: 5px 10px;}
        #tree-show { width: 30%; float: left;}
        #tree-show a{cursor: pointer; display: inline-block;}
        #tree-show a.active{color: red}
        #tree-show .active a{color: #000}
        
        #tree-ctrl { width: 40%; float: left; border: 1px solid #ccc;; height:600px; padding: 20px;}
        #tree-ctrl input[type="button"]{ padding: 5px 10px;}
        #childrenShow b { margin-right: 15px; color: #666666;}
    </style>
</head>
<body>
<!--<form action="/addUser" method="post">
    <ul>
        <li> <h3>新增用户:</h3></li>
        <li><input type="text" name="name" placeholder="姓名"></li>
        <li><input type="submit" value="添加"></li>
    </ul>
</form>
<form action="/addModule" method="post">
    <ul>
        <li> <h3>新增模块:</h3></li>
        <li><input type="text" name="name" placeholder="模块名"></li>
        <li><input type="submit" value="添加"></li>
    </ul>
</form>-->
<div id="tree-show">
    <h2>结构树：</h2>
</div>
<div id="tree-ctrl">
    <ul>
        <li>
            <input type="button" value="删除节点" id="deleteNode">
        </li>
        <li>
            <label for="updateNode">更改节点名称</label>
            <input type="text" id="updateNodeText">
            <input type="button" id="updateNodeBtn" value="确定">
        </li>
        <li>
            <label for="addNode">添加子节点</label>
            <input type="text" id="addNodeName">
            <input type="button" id="addNodeBtn" value="确定">
        </li>
        <li>
            <label for="moveNode">移动节点到</label>
            <select name="" id="moveNode">
                <!--<option value="">父节点</option>-->
            </select>
        </li>
        <li>
            <label for="translation">移动到</label>
            <select name="" id="translationList">
                <!--<option value="">父节点</option>-->
            </select>
            <label><input type="radio" name="moveDirection" value="true" checked="checked">之前</label>
            <label><input type="radio" name="moveDirection" value="false">之后</label>
            <input type="button" value="移动" id="translationBtn">
        </li>
    </ul>
    <b>当前节点所有子孙点 <span id="childrenCount"></span>：</b>
    <p id="childrenShow">
    </p>
</div>
</body>
</html>
<script src="./jquery/dist/jquery.min.js"></script>
<script>

    var tree = $('#tree-show')[0];

    window.onload = updateTree;
    function updateTree() {

        $.ajax({
            methods:'get',
            url:'getAll',
            success: function(list) {
                renderTree(list);
            }
        })

    }

    /*
    * 渲染树
    * @Para [Array] list 对象数组
    * */
    function renderTree(list) {
        var
                len = list.length
                , node, root, template = '';

        if(len == 0) return;
        for(var i = 0;i < len; i++){
            node = list[i];
            if(!node.fatherId && node.fatherId != 0){
                root = node;
                break;
            }
        }

        template = '<ul><li><a id="'+ root.id +'" data-name="' + root.name + '">' + root.name;
        $('#tree-show').html(template);

        addChildren(root.id)
        function addChildren(id) {
            var
                    children = getChildren(id)
                     , len = children.length;

            if(len > 0) {
                var ulStr = '<ul>';
            }

            for(var i = 0; i <len; i++){
                node = children[i];
                ulStr += '<li><a id="'+ node.id +'" data-name="' + node.name + '">' + node.name + '</a>';
            }

            $(ulStr).appendTo('#'+id);
            for(var j = 0; j< len; j++){
                node = children[j];
                addChildren(node.id);
            }

        }

        /*
        * 获取指定节点下的子节点
        * @Para [String] id 节点id
        * @return [Array] result 子节点数组
        * */
        function getChildren(id) {
            var result = [];

            for(var i = 0;i < len; i++){
                node = list[i];
                if(node.fatherId == id){
                    result.push(node);
                }
            }
            return result;
        }

    }

    var preV = null;
    // 单击选择节点
    $(tree).click(function(ev) {
        var tar = ev.target;

        if(preV){
            preV.className = '';
        }

        if(tar.nodeName.toLowerCase() == 'a'){
            tar.className = 'active';
            preV = tar;
            showChildren(tar);
            updateSelection(tar);
            updateSiblingList(tar);
            $('#updateNodeText').val(tar.dataset.name);
        }

    })


    /*
    * 展示当前节点下的子孙节点到页面
    * @Para [ELEMENT] node DOM节点
    * */
    function showChildren(node) {

        $.ajax({
            url:'getChildren?id=' + node.id,
            methods: 'get',
            success: function(list) {
                var showBox = $('#childrenShow');
                var i = 0 , len = list.length, tmp = '';
                for(;i<len; i++){
                    tmp += '<b>' + list[i].name + '</b>';
                }
                showBox.html(tmp);
                $('#childrenCount').html('(' + len + ')')
            }
        })

    }

    /*
    * 更新对应节点可以移动到的节点列表
    * @Para [ELEMENT] node DOM节点
    * */
    function updateSelection(node) {

        $.ajax({
            url:'getOtherBranchById?id=' + node.id,
            methods: 'get',
            success: function(list) {
                var i = 0, len = list.length, tmp ='';
                for(; i<len; i++){
                    tmp += '<option value="'+ list[i].id +'">' + list[i].name + '</option>'
                }
                $('#moveNode').html(tmp);
            }
        })

    }

    /*
    * 更新兄弟节点列表
    * @Para [ELEMENT] node DOM节点
    * */
    function updateSiblingList(node) {
        $.ajax({
            url:'getSibling?id=' + node.id,
            methods: 'get',
            success: function(list) {
                var i = 0, len = list.length, tmp ='';
                for(; i<len; i++){
                    if(list[i].id == node.id) continue;
                    tmp += '<option value="'+ list[i].id +'">' + list[i].name + '</option>'
                }
                $('#translationList').html(tmp);
            }
        })
    }

    // 移动节点
    $('#moveNode')[0].onchange = function() {
        var
            selfId = $('.active',tree).attr('id')
            ,newId = this.value;

        $.ajax({
            url:'moveNode?id=' + selfId + '&newParentId=' + newId,
            methods: 'get',
            success: function(list) {
                var i = 0, len = list.length, tmp ='';
                for(; i<len; i++){
                    tmp += '<option value="'+ list[i].id +'">' + list[i].name + '</option>'
                }
                $('#moveNode').html(tmp);
                window.location.reload();
            }
        })

    }

    // 删除节点
    $('#deleteNode').click(function() {
        var selfId = $('.active',tree).attr('id');

        $.ajax({
            url:'deleteById?id=' + selfId,
            methods: 'get',
            success: function(list) {
                var i = 0, len = list.length, tmp ='';
                for(; i<len; i++){
                    tmp += '<option value="'+ list[i].id +'">' + list[i].name + '</option>'
                }
                $('#moveNode').html(tmp);
                window.location.reload();
            }
        })

    });

    // 添加子节点
    $('#addNodeBtn').click(function() {
        var
                nodeName = $('#addNodeName').val()
                ,fatherId = $('.active',tree).attr('id') || null;

        $.ajax({
            url:'addModule',
            type: 'post',
            data: {
                name: nodeName,
                creatorId:'',
                fatherId: fatherId
            },
            success: function(data) {
                window.location.reload();
            }
        })

    });

    // 更改节点名称
    $('#updateNodeBtn').click(function() {

        $.ajax({
            url:'updateNode',
            type: 'post',
            data: {
                id: $('.active',tree).attr('id'),
                name: $('#updateNodeText').val()
            },
            success: function(data) {
                window.location.reload();
            }
        })

    });

    // 同层平移
    $('#translationBtn').click(function() {
        console.log();
        $.ajax({
            url:'translation?id=' + $('.active',tree).attr('id') + '&refId=' + $('#translationList').val() + '&forward=' + $('input[name="moveDirection"]:checked').val(),
            type: 'get',
            success: function(data) {
                window.location.reload();
            }
        })
    })

    // 阻止选择文本的默认行为
    tree.onselectstart = function() {
        return false;
    };

</script>